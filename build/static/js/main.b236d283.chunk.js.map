{"version":3,"sources":["service/index.js","components/TableComponent/index.js","components/LoadingComponent/index.js","containers/TableContainer/index.js","components/FormComponent/index.js","containers/FormContainer/formState.js","containers/FormContainer/validation.js","containers/FormContainer/handleSubmit.js","containers/FormContainer/index.js","App.js","index.js"],"names":["API_URI","getMovies","a","Data","fetch","method","then","response","json","data","console","log","deleteMovie","id","createMovie","body","JSON","stringify","headers","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","TableComponent","_data","useState","setData","deleteRow","oldData","_id","dataDelete","index","findIndex","e","splice","style","maxWidth","icons","title","columns","field","options","actionsColumnIndex","editable","onRowDelete","LoadingComponent","Container","fixed","Grid","container","direction","justify","alignItems","CircularProgress","TableContainer","undefined","useEffect","movies","fetchData","FormComponent","openForm","setOpenForm","names","selectedGenre","setSelectedGenre","useFormikContext","setFieldValue","handleChange","errors","touched","handleSubmit","handleClose","Dialog","open","onClose","fullWidth","DialogTitle","DialogContent","onSubmit","preventDefault","spacing","item","xs","TextField","label","name","onChange","color","year","InputLabel","Select","multiple","target","value","input","Input","map","MenuItem","genres","type","contentRating","InputLabelProps","shrink","releaseDate","originalTitle","TextareaAutosize","placeholder","minWidth","minHeight","storyline","DialogActions","Button","onClick","variant","initialValues","validationSchema","Yup","max","required","min","defined","values","FormContainer","App","Tooltip","Fab","position","bottom","right","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b236d283.chunk.js","sourcesContent":["const API_URI = 'http://localhost:4000/api/v1/movies';\nconst getMovies = async () => {\n    try {\n        let Data = null;\n        await fetch(API_URI, {\n        method: \"GET\",\n        })\n        .then(response => response.json())\n        .then(data => { Data = data; });\n        return Data;\n    } catch (error) {\n        console.log(\"Some error happened while retrieving list of movies !\");       \n    }\n}\n\nconst deleteMovie = async(id) => {\n    try {\n        await fetch(API_URI+'/'+id, {\n            method: \"DELETE\",\n            })\n            .then(() =>  'Movie deleted');\n        } catch (error) {\n            console.log(\"Some error happened while deleting a movie !\");       \n    }\n};\n\nconst createMovie = async (data) => {\n    let Data = null;\n    try {\n        await fetch(API_URI, {\n            method: \"POST\",\n            body: JSON.stringify(data),\n            headers: {\n                'Content-Type': 'application/json',\n              }})\n        .then(response => response.json())\n        .then(data => { Data = data; });\n            return Data;\n        } \n        catch (error) {\n            console.log(\"Some error happened while creating a movie !\");       \n        }\n    \n};\nexport { getMovies, deleteMovie, createMovie }","import React, { forwardRef, useState }  from 'react';\nimport MaterialTable from 'material-table'\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\nimport { deleteMovie } from '../../service';\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst TableComponent = ({data : _data}) => {\n    const [data, setData] = useState(_data);\n    const deleteRow = async (oldData) => {\n      await deleteMovie(oldData._id);       \n      const dataDelete = [...data];\n      const index = data.findIndex(e =>  e._id === oldData._id);\n      dataDelete.splice(index, 1);\n      setData(dataDelete);\n    }\n\n    return (\n        <div style={{ maxWidth: '100%' }}>\n            <MaterialTable\n                icons={tableIcons}\n                title=\"Movies\"\n                columns={[\n                    { title: 'Title', field: 'title' },\n                    { title: 'Storyline', field: 'storyline'},\n                ]}\n                data={data}\n                  options={{\n                    actionsColumnIndex: -1,\n                  }}\n                  editable={{\n                    onRowDelete : (oldData) => deleteRow(oldData),\n                  }}\n        />\n        </div>\n    );\n}\nexport default TableComponent;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst LoadingComponent = () => {\n    return (\n        <div>\n            <Container fixed>\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                >\n                    <CircularProgress />\n                </Grid>\n            </Container>\n            \n        </div>\n    );\n};\n\nexport default LoadingComponent;","import React, { useState, useEffect} from 'react';\nimport TableComponent from '../../components/TableComponent';\nimport LoadingComponent from '../../components/LoadingComponent';\n\nimport { getMovies } from '../../service';\n\nconst TableContainer = () => {\n    const [data, setData] = useState(undefined);\n\n    useEffect( () => {\n        async function fetchData(){\n            const movies = await getMovies();\n            setData(movies);\n        };\n        fetchData();\n    }, []);\n\n    const renderTableContainer = () => {\n        if(data) return (<TableComponent data={data} />);\n        return <LoadingComponent />\n        };\n\n    return (\n        <>\n            {renderTableContainer()}\n        </>\n    );\n};\n\nexport default TableContainer;","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport { useFormikContext } from 'formik';\n\nconst FormComponent = ({ openForm, setOpenForm}) => {\n    const names=[\"Crime\",\"Drama\"];\n    const [selectedGenre, setSelectedGenre] = useState([]);\n    const {\n        setFieldValue,\n        handleChange,\n        errors,\n        touched,\n        handleSubmit,\n      } = useFormikContext();\n   \n\n    const renderForm = () => {\n        return (\n        <form onSubmit={(e) => { e.preventDefault(); handleSubmit() }}>\n            <Grid container spacing={3}>\n                <Grid item xs={4}>\n                    <TextField  label=\"Title\" \n                    id=\"title\" name=\"title\" onChange={handleChange} \n                    />\n                    {touched.title && errors.title ? (<div style={{ color: \"red\"}}>{errors.title}</div>) : null}\n                </Grid>\n                <Grid item xs={4}>\n                    <TextField label=\"Year\" \n                    id=\"year\" name=\"year\" onChange={handleChange} \n                    />\n                    {touched.year && errors.year ? (<div style={{ color:\"red\"}}>{errors.year}</div>) : null}\n                </Grid>\n                <Grid item xs={4}>\n                <InputLabel >Genre</InputLabel>\n                    <Select\n                        multiple\n                        onChange={(e) => { \n                            setSelectedGenre(e.target.value);\n                            setFieldValue('genres', e.target.value);\n                        }}\n                        name='genres'\n                        id='genres'\n                        value={selectedGenre}\n                        input={<Input />}\n                    >\n                    {names.map((name) => (\n                        <MenuItem key={name} value={name}>\n                        {name}\n                        </MenuItem>\n                    ))}\n                    </Select>\n                    {touched.genres && errors.genres ? (<div style={{ color:\"red\"}}>{errors.genres}</div>) : null}\n                </Grid>\n\n                <Grid item xs={4}>\n                    <TextField label=\"Content Rating\" type=\"number\"\n                        id=\"contentRating\" name=\"contentRating\" onChange={handleChange} \n                    />\n                {touched.contentRating && errors.contentRating ? (<div style={{ color:\"red\"}}>{errors.contentRating}</div>) : null}\n                </Grid>\n                <Grid item xs={4}>\n                    <TextField label=\"Release Date\" type=\"date\"\n                        id=\"releaseDate\" name=\"releaseDate\" onChange={handleChange}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    {touched.releaseDate && errors.releaseDate ? (<div style={{ color:\"red\"}}>{errors.releaseDate}</div>) : null}\n                </Grid>\n                <Grid item xs={4}>\n                    <TextField label=\"Original Title\" \n                    id=\"originalTitle\" name=\"originalTitle\" onChange={handleChange}\n                    />\n                    {touched.originalTitle && errors.originalTitle ? (<div style={{ color:\"red\"}}>{errors.originalTitle}</div>) : null}\n                </Grid>\n\n                <Grid item>\n                    <TextareaAutosize  \n                        placeholder=\"Storyline\" \n                        style={{ minWidth: \"500px\", minHeight: \"100px\" }}\n                        id=\"storyline\" name=\"storyline\" onChange={handleChange}\n                        \n                    />\n                    {touched.storyline && errors.storyline ? (<div style={{ color:\"red\"}}>{errors.storyline}</div>) : null}\n                </Grid>                \n            </Grid>\n            {/* <Button type=\"submit\" value=\"Submit/> */}\n        </form>\n        );\n    };\n    const handleClose = () => setOpenForm(false);\n  return (\n    <Container maxWidth=\"md\">\n    <Dialog  \n        open={openForm} \n        onClose={handleClose}\n        fullWidth={true}\n        maxWidth={'md'}\n    >\n        <DialogTitle>Add New Movie</DialogTitle>\n        <DialogContent>\n            { renderForm()}\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={handleClose} variant=\"contained\">\n                Cancel\n            </Button>\n            <Button color=\"primary\" onClick={() => handleSubmit()} variant=\"contained\">\n                Submit\n            </Button>\n        </DialogActions>\n    </Dialog>\n    </Container>\n  );\n}\n\nexport default FormComponent;\n","const initialValues= (setOpenForm) => {\n    const initialState = {\n        \"title\": undefined,\n        \"year\": undefined,\n        \"genres\": undefined,\n        \"contentRating\": undefined,\n        \"releaseDate\": undefined,\n        \"originalTitle\": undefined,\n        \"storyline\": undefined,\n        \"setOpenForm\": setOpenForm,\n    };\n    return initialState;\n}\n\nexport default initialValues;","import * as Yup from 'yup';\n\nconst validationSchema = () => {\n  const Schema = Yup.object({\n    \"title\": Yup.string().max(30, 'Must be 30 characters or less').required('Required'),\n    \"year\": Yup.number().min(1800,'Must be more than 1800').max(2022,'Must be less than 2022').required('Required'),\n    \"genres\": Yup.array().defined().required('Required'),\n    \"contentRating\": Yup.number().min(1,'Must be between 1 and 10').max(10,'Must be between 1 and 10').required('Required'),\n    \"releaseDate\":  Yup.date().required('Required'),\n    \"originalTitle\": Yup.string().required('Required'),\n    \"storyline\": Yup.string().min(100, 'Must be 100 characters at least').required('Required'),\n  });\n  return Schema;\n};\nexport default validationSchema;\n","import { createMovie } from '../../service';\nconst handleSubmit = async (values) => {\n    const data = {\n        \"title\": values.title,\n        \"year\": values.year,\n        \"genres\": values.genres,\n        \"contentRating\": values.contentRating,\n        \"releaseDate\": values.releaseDate,\n        \"originalTitle\": values.originalTitle,\n        \"storyline\": values.storyline,\n    };\n    console.log(\"handleSubmit\", data);\n    await createMovie(data);\n    console.log(values);\n    values.setOpenForm(false);\n};\n\nexport default handleSubmit;","import React from 'react';\nimport FormComponent from '../../components/FormComponent';\nimport { Formik } from 'formik';\nimport initialValues from './formState';\nimport validationSchema from './validation';\nimport handleSubmit from './handleSubmit';\n\nconst FormContainer = ({ openForm, setOpenForm}) => {\n  return (\n    <div>\n        <Formik\n            initialValues={initialValues(setOpenForm)}\n            validationSchema={validationSchema()}\n            onSubmit={handleSubmit}\n        >\n            <FormComponent openForm={openForm} setOpenForm={setOpenForm} />\n        </Formik>\n    </div>\n  );\n}\n\nexport default FormContainer;\n","import React, { useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport TableContainer from './containers/TableContainer';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormContainer from './containers/FormContainer';\n\nconst App = () => {\n  const [openForm, setOpenForm] = useState(false);\n  return (\n    <div>\n        <Container fixed>\n            <TableContainer />\n            <FormContainer openForm={openForm} setOpenForm={setOpenForm} />\n        </Container>\n        <Tooltip title=\"Add a Movie\" >\n          <Fab color=\"primary\" \n          style={{ position: 'fixed', bottom: '10px',right: '10px' }}\n          onClick={() => setOpenForm(true)}\n          >\n            <AddIcon />\n        </Fab>\n        </Tooltip>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}